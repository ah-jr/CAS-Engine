==============================================================================
CAS-Engine's PATCH NOTES 
==============================================================================

v1.6

  - Created a DLL for the engine with a simple wrapper (CasDllWrapper.pas).
    See examples/playAudio.cpp to learn how to use it.
  - Added implementation for DirectSound.
  - Remove need for auxiliary files while decoding by using pipe between the
    ffmpeg process and the engine. 
  - Added a method called AsyncUpdate to use in case the buffer is too large 
    to properly update the application. It calculates the position using the
    sample rate and eventually syncs with the buffers to prevent larger
    inaccuracies.
  - Created a Interface to make future driver implementations easier.
  - Created AsyncDecodeFile, which uses a new thread to decode and prevents
    the app from halting when loading files.
  - Separated CasEngineU from actual driver implementations.
  - New method for getting time/duration

v1.5

  - Created clone procedure for TCasTrack.
  - Fixed possible invalid memory access in TCasTrack.Destroy. 
  - New 'previous' and 'next' functionalities in TCasPlaylist

v1.4:

  - Removed PostMessage inside audio callback in order to fix audio glitches.
  - Added a timer that updates the owner every 10ms. 

v1.3:

  - Added Patch Notes.
  - Removed OpenAsio.dll usage, by utilizing Florent Ouchet's asm code that 
    enables Delphi to compile ASIO functions correctly.
    The OpenAsio unit was created because the ASIO SDK by Steinberg declares
    a interface whose calling convention is not supported by 32bit Delphi,
    but now we can simply use TOpenASIO class in Asio.pas which utilizes asm
    lines to fix the issue. 

v1.2:

  - General code organization and commentary.
  - Changing the position variable of the playlist to a double type, in order
    to further reduce distortion in the output sound and improve the quality
    of resampling.

v1.1:

  - Creation on new Unit "CasBasicFxU", containing the interpolation algorithm
  - Major improvement of the interpolation algorithm. No more clicks heard in
    the playback.
 

v1.1a:

  - Creation of a interpolation algorithm for resampling audio in real time.
    The algorithm should not be trusted in this version, the output audio
    contains clicks and noticible distortion.


v1.0:  

  - Project created from the audio engine running "CAS-AudioPlayer". 


